// Generated by CoffeeScript 1.9.3
(function() {
  var IonicUtils;

  angular.module('app').factory('IonicUtils', IonicUtils);

  IonicUtils.$inject = ['$ionicLoading', '$ionicScrollDelegate', '$ionicPosition'];

  IonicUtils = function($ionicLoading, $ionicScrollDelegate, $ionicPosition) {
    var _getParentWithClass, scrollTo, service, withLoading;
    service = {
      withLoading: withLoading,
      scrollTo: scrollTo
    };
    withLoading = function(promise) {
      $ionicLoading.show();
      return promise.then(function(res) {
        return res;
      })["finally"](function() {
        return $ionicLoading.hide();
      });
    };
    scrollTo = function(className, _shouldAnimate) {
      var $scroll, e, elt, eltOffset, handle, scroll, scrollElt, scrollOffset;
      elt = document.getElementsByClassName(className);
      if (elt) {
        scrollElt = _getParentWithClass(angular.element(elt), 'scroll-content');
        if (scrollElt) {
          try {
            eltOffset = $ionicPosition.offset(elt);
            scrollOffset = $ionicPosition.offset(scrollElt);
            handle = scrollElt.attr('delegate-handle');
            $scroll = handle ? $ionicScrollDelegate.$getByHandle(handle) : $ionicScrollDelegate;
            scroll = $scroll.getScrollPosition();
            return $scroll.scrollTo(scroll.left, eltOffset.top - scrollOffset.top, _shouldAnimate);
          } catch (_error) {
            e = _error;
            return console.warn('scrollTo(' + className + ') error :(', e);
          }
        } else {
          return console.warn('Parent element with class <scroll-content> not found !');
        }
      } else {
        return console.warn('Element with class <' + className + '> not found !');
      }
    };
    _getParentWithClass = function(elt, className, _maxDeep) {
      var parent;
      if (_maxDeep === void 0) {
        _maxDeep = 10;
      }
      parent = elt.parent();
      if (parent.hasClass(className)) {
        return parent;
      } else if (_maxDeep > 0) {
        return _getParentWithClass(parent, className, _maxDeep - 1);
      } else {
        return null;
      }
    };
    return service;
  };

}).call(this);

//# sourceMappingURL=ionic-utils.js.map
