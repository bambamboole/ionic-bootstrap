// Generated by CoffeeScript 1.9.3
(function() {
  angular.module('app').factory('Utils', function($timeout, $q, $sce, $log) {
    var _boolSort, _getDeep, _intSort, _strSort, async, createUuid, debounce, debounces, endsWith, extendDeep, extendsWith, getDeep, isDate, isEmail, isUrl, randInt, service, sort, startsWith, toDate, trustHtml;
    service = {
      createUuid: createUuid,
      isEmail: isEmail,
      isUrl: isUrl,
      startsWith: startsWith,
      endsWith: endsWith,
      randInt: randInt,
      toDate: toDate,
      isDate: isDate,
      getDeep: getDeep,
      async: async,
      debounce: debounce,
      trustHtml: trustHtml,
      extendDeep: extendDeep,
      extendsWith: extendsWith,
      sort: sort
    };
    debounces = [];
    createUuid = function() {
      var S4;
      S4 = function() {
        return ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);
      };
      return (S4() + S4() + '-' + S4() + '-4' + S4().substr(0, 3) + '-' + S4() + '-' + S4() + S4() + S4()).toLowerCase();
    };
    isEmail = function(str) {
      var re;
      re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
      return re.test(str);
    };
    isUrl = function(str) {
      return /^(https?):\/\/((?:[a-z0-9.-]|%[0-9A-F]{2}){3,})(?::(\d+))?((?:\/(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})*)*)(?:\?((?:[a-z0-9-._~!$&'()*+,;=:\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:\/?@]|%[0-9A-F]{2})*))?$/i.test(str);
    };
    startsWith = function(str, prefix) {
      return str.indexOf(prefix) === 0;
    };
    endsWith = function(str, suffix) {
      return str.indexOf(suffix, str.length - suffix.length) !== -1;
    };
    randInt = function(min, max) {
      return Math.floor(Math.random() * (max - min + 1)) - min;
    };
    toDate = function(date) {
      if (typeof date === 'number') {
        return new Date(date);
      }
      if (typeof date === 'string') {
        return new Date(date);
      }
      if (date instanceof Date) {
        return date;
      }
      if (date && typeof date.toDate === 'function' && date.toDate() instanceof Date) {
        return date.toDate();
      }
    };
    isDate = function(date) {
      var d;
      d = toDate(date);
      return d instanceof Date && d.toString() !== 'Invalid Date';
    };
    async = function(fn) {
      var defer;
      defer = $q.defer();
      $timeout((function() {
        return defer.resolve(fn());
      }), 0);
      return defer.promise;
    };
    trustHtml = function(html) {
      return $sce.trustAsHtml(html);
    };
    debounce = function(key, callback, _debounceTime) {
      $timeout.cancel(debounces[key]);
      return debounces[key] = $timeout((function() {
        return callback();
      }), _debounceTime || 1000);
    };
    extendDeep = function(dest) {
      angular.forEach(arguments, function(arg) {
        if (arg !== dest) {
          return angular.forEach(arg, function(value, key) {
            if (dest[key] && typeof dest[key] === 'object') {
              return extendDeep(dest[key], value);
            } else {
              return dest[key] = angular.copy(value);
            }
          });
        }
      });
      return dest;
    };
    extendsWith = function(dest, src) {
      var i, results;
      results = [];
      for (i in src) {
        if (typeof src[i] === 'object') {
          if (dest[i] === void 0 || dest[i] === null) {
            results.push(dest[i] = angular.copy(src[i]));
          } else if (typeof dest[i] === 'object') {
            results.push(extendsWith(dest[i], src[i]));
          } else {
            results.push(void 0);
          }
        } else if (typeof src[i] === 'function') {

        } else if (dest[i] === void 0 || dest[i] === null) {
          results.push(dest[i] = src[i]);
        } else {
          results.push(void 0);
        }
      }
      return results;
    };
    sort = function(arr, params) {
      var firstElt, i;
      if (Array.isArray(arr) && arr.length > 0 && params && params.order) {
        firstElt = null;
        for (i in arr) {
          firstElt = _getDeep(arr[i], params.order.split('.'));
          if (typeof firstElt !== 'undefined') {
            break;
          }
        }
        if (typeof firstElt === 'boolean') {
          return _boolSort(arr, params);
        } else if (typeof firstElt === 'number') {
          return _intSort(arr, params);
        } else if (typeof firstElt === 'string') {
          return _strSort(arr, params);
        } else {
          return $log.warn('Unable to find suitable sort for type <' + typeof firstElt + '>', firstElt);
        }
      }
    };
    _strSort = function(arr, params) {
      return arr.sort(function(a, b) {
        var aStr, bStr;
        aStr = _getDeep(a, params.order.split('.'), '').toLowerCase();
        bStr = _getDeep(b, params.order.split('.'), '').toLowerCase();
        if (aStr > bStr) {
          return 1 * (params.desc ? -1 : 1);
        } else if (aStr < bStr) {
          return -1 * (params.desc ? -1 : 1);
        } else {
          return 0;
        }
      });
    };
    _intSort = function(arr, params) {
      return arr.sort(function(a, b) {
        var aInt, bInt;
        aInt = _getDeep(a, params.order.split('.'), 0);
        bInt = _getDeep(b, params.order.split('.'), 0);
        return (aInt - bInt) * (params.desc ? -1 : 1);
      });
    };
    _boolSort = function(arr, params) {
      return arr.sort(function(a, b) {
        var aBool, bBool;
        aBool = _getDeep(a, params.order.split('.'), 0);
        bBool = _getDeep(b, params.order.split('.'), 0);
        return (aBool === bBool ? 0 : aBool ? -1 : 1) * (params.desc ? -1 : 1);
      });
    };
    getDeep = function(obj, path, _defaultValue) {
      return _getDeep(obj, path.split('.'), _defaultValue);
    };
    _getDeep = function(obj, attrs, _defaultValue) {
      var attr;
      if (Array.isArray(attrs) && attrs.length > 0) {
        if (typeof obj === 'object') {
          attr = attrs.shift();
          return _getDeep(obj[attr], attrs, _defaultValue);
        } else {
          return _defaultValue;
        }
      } else {
        if (typeof obj === 'undefined') {
          return _defaultValue;
        } else {
          return obj;
        }
      }
    };
    return service;
  });

}).call(this);

//# sourceMappingURL=utils.js.map
