// Generated by CoffeeScript 1.9.3
(function() {
  var date, datetime, duration, humanTime, mynumber, rating, time;

  angular.module('app').filter('date', date).filter('datetime', datetime).filter('time', time).filter('humanTime', humanTime).filter('duration', duration).filter('mynumber', mynumber).filter('rating', rating);

  date = function(Utils, moment) {
    return function(date, format) {
      var jsDate;
      jsDate = Utils.toDate(date);
      if (jsDate) {
        return moment(jsDate).format(format ? format : 'll');
      } else {
        return '<date>';
      }
    };
  };

  datetime = function(Utils, moment) {
    return function(date, format) {
      var jsDate;
      jsDate = Utils.toDate(date);
      if (jsDate) {
        return moment(jsDate).format(format ? format : 'D MMM YYYY, HH:mm:ss');
      } else {
        return '<datetime>';
      }
    };
  };

  time = function(Utils, moment) {
    return function(date, format) {
      var jsDate;
      jsDate = Utils.toDate(date);
      if (jsDate) {
        return moment(jsDate).format(format ? format : 'LT');
      } else {
        return '<time>';
      }
    };
  };

  humanTime = function(Utils, moment) {
    return function(date) {
      var jsDate;
      jsDate = Utils.toDate(date);
      if (jsDate) {
        return moment(jsDate).fromNow(true);
      } else {
        return '<humanTime>';
      }
    };
  };

  duration = function($log, moment) {
    return function(seconds, humanize) {
      var prefix;
      if (seconds || seconds === 0) {
        if (humanize) {
          return moment.duration(seconds, 'seconds').humanize();
        } else {
          prefix = -60 < seconds && seconds < 60 ? '00:' : '';
          return prefix + moment.duration(seconds, 'seconds').format('hh:mm:ss');
        }
      } else {
        $log.warn('Unable to format duration', seconds);
        return '<duration>';
      }
    };
  };

  mynumber = function($filter) {
    return function(number, round) {
      var mul;
      mul = Math.pow(10, (round ? round : 0));
      return $filter('number')(Math.round(number * mul) / mul);
    };
  };

  rating = function($filter) {
    return function(rating, max, withText) {
      var maxStars, stars, text;
      stars = rating ? new Array(Math.floor(rating) + 1).join('★') : '';
      maxStars = max ? new Array(Math.floor(max) - Math.floor(rating) + 1).join('☆') : '';
      text = withText ? ' (' + $filter('mynumber')(rating, 1) + ' / ' + $filter('mynumber')(max, 1) + ')' : '';
      return stars + maxStars + text;
    };
  };

}).call(this);

//# sourceMappingURL=filters.js.map
