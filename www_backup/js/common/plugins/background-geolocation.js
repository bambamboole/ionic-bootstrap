// Generated by CoffeeScript 1.9.3
(function() {
  angular.module('app').factory('BackgroundGeolocationPlugin', function($window, $q, $log, GeolocationPlugin, PluginUtils) {
    var configure, defaultOpts, enable, pluginName, pluginTest, service, start, stop;
    pluginName = 'BackgroundGeolocation';
    pluginTest = function() {
      return $window.plugins && $window.plugins.backgroundGeoLocation;
    };
    service = {
      enable: enable,
      disable: stop,
      configure: configure,
      start: start,
      stop: stop
    };
    defaultOpts = {
      desiredAccuracy: 10,
      stationaryRadius: 20,
      distanceFilter: 30,
      notificationTitle: 'Location tracking',
      notificationText: 'ENABLED',
      activityType: 'AutomotiveNavigation',
      debug: true,
      stopOnTerminate: true
    };
    configure = function(opts, postLocation) {
      return PluginUtils.onReady(pluginName, pluginTest).then(function() {
        var callbackFn, failureFn, options;
        callbackFn = function(location) {
          if (postLocation) {
            return postLocation(location).then((function() {
              return $window.plugins.backgroundGeoLocation.finish();
            }), function(error) {
              $log.error('pluginError:' + pluginName, error);
              return $window.plugins.backgroundGeoLocation.finish();
            });
          } else {
            return $window.plugins.backgroundGeoLocation.finish();
          }
        };
        failureFn = function(error) {
          return $log.error('pluginError:' + pluginName, error);
        };
        options = angular.extend({}, defaultOpts, opts);
        $window.plugins.backgroundGeoLocation.configure(callbackFn, failureFn, options);
        return GeolocationPlugin.getCurrentPosition();
      });
    };
    start = function() {
      return PluginUtils.onReady(pluginName, pluginTest).then(function() {
        return $window.plugins.backgroundGeoLocation.start();
      });
    };
    stop = function() {
      return PluginUtils.onReady(pluginName, pluginTest).then(function() {
        return $window.plugins.backgroundGeoLocation.stop();
      });
    };
    enable = function(opts, postLocation) {
      return configure(opts, postLocation).then(function() {
        return start();
      });
    };
    return service;
  });


  /**************************
   *                        *
   *      Browser Mock      *
   *                        *
  #************************
   */

  ionic.Platform.ready(function() {
    if (!(ionic.Platform.isAndroid() || ionic.Platform.isIOS() || ionic.Platform.isIPad())) {
      if (!window.plugins) {
        window.plugins = {};
      }
      if (!window.plugins.backgroundGeoLocation) {
        return window.plugins.backgroundGeoLocation = (function() {
          var callback, config, interval;
          config = null;
          callback = null;
          interval = null;
          return {
            configure: function(callbackFn, failureFn, opts) {
              config = opts;
              callback = callbackFn;
            },
            start: function() {
              if (interval === null) {
                interval = setInterval((function() {
                  window.navigator.geolocation.getCurrentPosition(function(position) {
                    callback(position);
                  });
                }), 3000);
              }
            },
            stop: function() {
              if (interval !== null) {
                clearInterval(interval);
                interval = null;
              }
            },
            finish: function() {}
          };
        })();
      }
    }
  });

}).call(this);

//# sourceMappingURL=background-geolocation.js.map
