do ->
# open external links (starting with http:// or https://) outside the app

  href = ($window) ->
    externePrefixes = [
      'http:'
      'https:'
      'tel:'
      'sms:'
    ]

    isExterneUrl = (url) ->
      if url
        for i of externePrefixes
          if url.indexOf(externePrefixes[i]) == 0
            return true
      false

    {
    restrict: 'A'
    scope: url: '@href'
    link: (scope, element, attrs) ->
      if isExterneUrl(scope.url)
        element.bind 'click', (e) ->
          e.preventDefault()
          # require cordova plugin org.apache.cordova.inappbrowser
          $window.open encodeURI(scope.url), '_system', 'location=yes'
          return
      return

    }

  debounce = ($timeout) ->
    {
    restrict: 'A'
    require: 'ngModel'
    priority: 99
    link: (scope, element, attr, ngModelCtrl) ->
      `var debounce`
      if attr.type == 'radio' or attr.type == 'checkbox'
        return
      debounce = undefined
      element.unbind 'input'
      element.bind 'input', ->
        $timeout.cancel debounce
        debounce = $timeout((->
          scope.$apply ->
            ngModelCtrl.$setViewValue element.val()
            return
          return
        ), attr.ngDebounce or 1000)
        return
      element.bind 'blur', ->
        scope.$apply ->
          ngModelCtrl.$setViewValue element.val()
          return
        return
      return

    }

  blurOnKeyboardOut = ($window) ->
    {
    restrict: 'A'
    link: (scope, element, attrs) ->
# require cordova plugin https://github.com/driftyco/ionic-plugins-keyboard
      $window.addEventListener 'native.keyboardhide', (e) ->
        element[0].blur()
        scope.safeApply ->
          scope.$eval attrs.blurOnKeyboardOut
          return
        return
      return

    }

  # keep focus on input while keyboard is open

  focusOnKeyboardOpen = ($window) ->
    {
    restrict: 'A'
    link: (scope, element, attrs) ->
      keyboardOpen = false
      # require cordova plugin https://github.com/driftyco/ionic-plugins-keyboard
      $window.addEventListener 'native.keyboardshow', (e) ->
        keyboardOpen = true
        element[0].focus()
        return
      $window.addEventListener 'native.keyboardhide', (e) ->
        keyboardOpen = false
        element[0].blur()
        return
      element[0].addEventListener 'blur', ((e) ->
        if keyboardOpen
          element[0].focus()
        return
      ), true
      return

    }

  'use strict'
  angular.module('app').directive('href', href).directive('debounce', debounce).directive('blurOnKeyboardOut', blurOnKeyboardOut).directive 'focusOnKeyboardOpen', focusOnKeyboardOpen
  return

# ---
# generated by js2coffee 2.1.0